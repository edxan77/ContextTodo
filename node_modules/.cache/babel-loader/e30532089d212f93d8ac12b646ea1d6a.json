{"ast":null,"code":"var _jsxFileName = \"/home/edxan77/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/todo/src/components/list.js\",\n    _s = $RefreshSig$();\n\nimport { useContext } from \"react\";\nimport { Context } from \"../context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function List() {\n  _s();\n\n  const {\n    state,\n    dispatch,\n    ref2\n  } = useContext(Context);\n  console.log(ref2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state[0].map(function (item, index) {\n      if (state[1].includes(index)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ref: ref2\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: function () {\n              dispatch({\n                type: \"clear\",\n                payload: index\n              });\n            },\n            children: \"X\"\n          }, Math.random(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: function () {\n              dispatch({\n                type: \"edit\",\n                payload: index,\n                data: ref2.current.value\n              });\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 22\n          }, this)]\n        }, Math.random(), true, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 25\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: function () {\n          dispatch({\n            type: \"click\",\n            payload: index\n          });\n        },\n        children: item\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 19\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n\n_s(List, \"0qI1/QyZwec4Sw5MSjXhH5MS1sM=\");\n\n_c = List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/edxan77/Рабочий стол/todo/src/components/list.js"],"names":["useContext","Context","List","state","dispatch","ref2","console","log","map","item","index","includes","Math","random","type","payload","data","current","value"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,YAAxB;;AAEA,OAAO,SAASC,IAAT,GAAe;AAAA;;AAClB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA,QAAP;AAAgBC,IAAAA;AAAhB,MAAwBL,UAAU,CAACC,OAAD,CAAxC;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACC,sBACI;AAAA,cACCF,KAAK,CAAC,CAAD,CAAL,CAASK,GAAT,CAAa,UAASC,IAAT,EAAcC,KAAd,EAAoB;AAC9B,UAAGP,KAAK,CAAC,CAAD,CAAL,CAASQ,QAAT,CAAkBD,KAAlB,CAAH,EAA4B;AACxB,4BAAQ;AAAA,kCACJ;AAA2B,YAAA,GAAG,EAAEL;AAAhC,aAAYO,IAAI,CAACC,MAAL,EAAZ;AAAA;AAAA;AAAA;AAAA,kBADI,eAEH;AAA2B,YAAA,OAAO,EAAE,YAAU;AAACT,cAAAA,QAAQ,CAAC;AAACU,gBAAAA,IAAI,EAAC,OAAN;AAAeC,gBAAAA,OAAO,EAACL;AAAvB,eAAD,CAAR;AAAwC,aAAvF;AAAA;AAAA,aAAYE,IAAI,CAACC,MAAL,EAAZ;AAAA;AAAA;AAAA;AAAA,kBAFG,eAGH;AAAQ,YAAA,OAAO,EAAE,YAAU;AAACT,cAAAA,QAAQ,CAAC;AAACU,gBAAAA,IAAI,EAAC,MAAN;AAAaC,gBAAAA,OAAO,EAACL,KAArB;AAA2BM,gBAAAA,IAAI,EAACX,IAAI,CAACY,OAAL,CAAaC;AAA7C,eAAD,CAAR;AAA8D,aAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHG;AAAA,WAAUN,IAAI,CAACC,MAAL,EAAV;AAAA;AAAA;AAAA;AAAA,gBAAR;AAMH;;AACD,0BAAM;AAAyB,QAAA,OAAO,EAAE,YAAU;AAACT,UAAAA,QAAQ,CAAC;AAACU,YAAAA,IAAI,EAAC,OAAN;AAAcC,YAAAA,OAAO,EAACL;AAAtB,WAAD,CAAR;AAAuC,SAApF;AAAA,kBAAuFD;AAAvF,SAAUG,IAAI,CAACC,MAAL,EAAV;AAAA;AAAA;AAAA;AAAA,cAAN;AACH,KAVA;AADD;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GAlBeX,I;;KAAAA,I","sourcesContent":["import { useContext } from \"react\"\nimport { Context } from \"../context\"\n\nexport function List(){\n    const {state,dispatch,ref2} = useContext(Context)\n   console.log(ref2)\n    return(\n        <div>\n        {state[0].map(function(item,index){\n            if(state[1].includes(index)){\n                return( <div key={Math.random()}>\n                    <input key={Math.random()} ref={ref2}></input> \n                     <span key={ Math.random()} onClick={function(){dispatch({type:\"clear\", payload:index})}}>X</span>\n                     <button onClick={function(){dispatch({type:\"edit\",payload:index,data:ref2.current.value})}}>Edit</button>\n                </div>\n                )\n            }\n            return<div key={Math.random()} onClick={function(){dispatch({type:\"click\",payload:index})}}>{item}</div>\n        })}\n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}